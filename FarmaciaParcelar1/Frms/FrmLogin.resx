<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnSair.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAs
        SgAALEoBd3p0TQAABD5JREFUeF7t3Otx3EYQBOALgSE4BIfgUBSCQtBPhaEQFIpDcAhyBNQ0BLAWPQ1g
        94wdua56q74qsjGzRQ5w4PF1j/f3d/uNZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1
        ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1dPh4vIVP4Xv4ERDaOMwOM8Qs3+SsU/B4fA4e+v0w089p
        3rt3Ho9va7HN8203cw//t/g4CdvwcdtpCzY4KX9txTYGs1tnyHOF5XaEhS+4fM/H+3/yhvYczHKdKc8Y
        s1++QrcHwMO/GWbazHeD2S9Pk9pw90XC7oPZNnMGzD49NHzPnwSzbeYMmP0uiDrdbPfgeaeAG+xePO8U
        cIPdi+edAm44EgtPob6Ev9HXAfe7Twf7nP68pLXWbz+nSvXrMf66phx9PL39TO7HmvrNPuAGJRaeUv2z
        9Qz4IfbCJ/xxPByeBBxba7Z6NcCR4amP55nhb9J+jOpzwA0sFobwzPBBfcL8NPgL12xwrKmD76Lm5U8A
        D6EXPjF1xfJ+qFO3Fr76IZ2sWK99C4rF93y8/4eq7RGrd7BdJ4o19Qs+3mvWPingBsb14enhb2KdDhdv
        r1lbc3iralFPRLruyqx9UsANbLS+R6zTAePtJoeuqx+angUf7zVrnxRwAxut7xVLDnn11NUP1BeRrrsy
        a58UcAMbre8VSw561WbdVz80fQs+3mvWPingBjZaPyIWD/vfVZt1X/1AvRHpuiuz9kkBN7DR+hGx1KOg
        NXT1Q9O74OO9Zu2TAm5go/WjYvGjoDV09QP1R6TrrszaJwXcwLj+BK7Wy29MWKyjR8Hw1Q9N/4KP95q1
        Twq4gXH9hctvzZVYX5s9Nl9V7RXaIyJdd2XWPingBsb1F3wCCO+TAm5gXH/CtyCB90kBN7DR+lGx/EX4
        zGj9iFh+GsoNbLR+RCx/I8YNbLS+Vyz/KAK4gY3W94olB71KJ0btoVBfRLruyqx9UsANbLS+R6zTIePt
        JofuR0HTs+DjvWbtkwJuYFwf/AuZAbxPCriBxfKvJG/cJwXcwGLxIHphYP/7X8ofafoWfLwX75MCbmCx
        MIiX/bOUI9QXka67wvukgBuUWC/7h1lHUPtMH2v22OwDbjgSC8PAFflSf5p4BLVrz1Afi9V+DDngBrsX
        zzsF3GD34nmngBvsXjxvBHy/9L8oTYLZNnMGzD49DfQ/6U2C2TZzBsx+9zRw439TvRlm2sx3g9mn59aA
        930SboJZrjPlGb9tBX6pggkwu3WGPFf49VIFTfFRod1v/2IdPgml9MvVfAS/bkd8v7L/DjM9f8Gmj3D/
        8xafjOdhdqc/50qB1ZKh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh1ZGh
        1ZGh1ZGh1ZGh1ZGh1ZGhVXl//ASXxsAOilLJ9wAAAABJRU5ErkJggg==
</value>
  </data>
</root>